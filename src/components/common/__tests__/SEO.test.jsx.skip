import { render } from '@testing-library/react';
import { HelmetProvider } from 'react-helmet-async';
import { describe, it, expect, beforeEach, afterEach } from 'vitest';
import SEO from '../SEO';

const renderWithHelmet = (children) => {
  return render(
    <HelmetProvider>
      {children}
    </HelmetProvider>
  );
};

describe('SEO', () => {
  beforeEach(() => {
    document.head.innerHTML = '';
  });

  afterEach(() => {
    document.head.innerHTML = '';
  });

  it('renders default meta tags correctly', () => {
    renderWithHelmet(<SEO />);

    const title = document.querySelector('title');
    expect(title?.textContent).toBe('Clínica Sorriso Perfeito');

    const description = document.querySelector('meta[name="description"]');
    expect(description?.getAttribute('content')).toBe(
      'Clínica odontológica especializada em tratamentos dentários modernos e eficazes. Agende sua consulta e tenha o sorriso perfeito que você sempre sonhou.'
    );

    const keywords = document.querySelector('meta[name="keywords"]');
    expect(keywords?.getAttribute('content')).toBe(
      'dentista, odontologia, clínica odontológica, tratamento dentário, implante, ortodontia, clareamento'
    );
  });

  it('renders custom title correctly', () => {
    const customTitle = 'Sobre Nós';
    renderWithHelmet(<SEO title={customTitle} />);

    const title = document.querySelector('title');
    expect(title?.textContent).toBe(`${customTitle} | Clínica Sorriso Perfeito`);
  });

  it('renders Open Graph meta tags', () => {
    renderWithHelmet(
      <SEO 
        title="Test Title"
        description="Test description"
        image="/test-image.jpg"
        url="https://test.com"
      />
    );

    const ogTitle = document.querySelector('meta[property="og:title"]');
    expect(ogTitle?.getAttribute('content')).toBe('Test Title | Clínica Sorriso Perfeito');

    const ogDescription = document.querySelector('meta[property="og:description"]');
    expect(ogDescription?.getAttribute('content')).toBe('Test description');

    const ogImage = document.querySelector('meta[property="og:image"]');
    expect(ogImage?.getAttribute('content')).toBe('/test-image.jpg');

    const ogUrl = document.querySelector('meta[property="og:url"]');
    expect(ogUrl?.getAttribute('content')).toBe('https://test.com');
  });

  it('renders Twitter Card meta tags', () => {
    renderWithHelmet(
      <SEO 
        title="Test Title"
        description="Test description"
        image="/test-image.jpg"
      />
    );

    const twitterCard = document.querySelector('meta[name="twitter:card"]');
    expect(twitterCard?.getAttribute('content')).toBe('summary_large_image');

    const twitterTitle = document.querySelector('meta[name="twitter:title"]');
    expect(twitterTitle?.getAttribute('content')).toBe('Test Title | Clínica Sorriso Perfeito');

    const twitterDescription = document.querySelector('meta[name="twitter:description"]');
    expect(twitterDescription?.getAttribute('content')).toBe('Test description');

    const twitterImage = document.querySelector('meta[name="twitter:image"]');
    expect(twitterImage?.getAttribute('content')).toBe('/test-image.jpg');
  });

  it('renders canonical URL when provided', () => {
    renderWithHelmet(
      <SEO 
        canonical="/test-page"
        url="https://test.com"
      />
    );

    const canonical = document.querySelector('link[rel="canonical"]');
    expect(canonical?.getAttribute('href')).toBe('https://test.com/test-page');
  });

  it('renders noindex robots tag when specified', () => {
    renderWithHelmet(<SEO noindex={true} />);

    const robots = document.querySelector('meta[name="robots"]');
    expect(robots?.getAttribute('content')).toBe('noindex,nofollow');
  });

  it('renders default robots tag', () => {
    renderWithHelmet(<SEO />);

    const robots = document.querySelector('meta[name="robots"]');
    expect(robots?.getAttribute('content')).toBe('index,follow');
  });

  it('renders structured data (Schema.org) correctly', () => {
    renderWithHelmet(<SEO />);

    const structuredData = document.querySelector('script[type="application/ld+json"]');
    expect(structuredData).toBeTruthy();

    const jsonData = JSON.parse(structuredData?.textContent || '{}');
    expect(jsonData['@type']).toBe('Dentist');
    expect(jsonData.name).toBe('Clínica Sorriso Perfeito');
    expect(jsonData.telephone).toBe('+55 (11) 99999-9999');
    expect(jsonData.address['@type']).toBe('PostalAddress');
  });

  it('renders custom structured data when provided', () => {
    const customStructuredData = {
      '@context': 'https://schema.org',
      '@type': 'WebPage',
      name: 'Custom Page'
    };

    renderWithHelmet(<SEO structuredData={customStructuredData} />);

    const structuredData = document.querySelector('script[type="application/ld+json"]');
    const jsonData = JSON.parse(structuredData?.textContent || '{}');
    
    expect(jsonData['@type']).toBe('WebPage');
    expect(jsonData.name).toBe('Custom Page');
  });

  it('renders favicon and app icon links', () => {
    renderWithHelmet(<SEO />);

    const favicon = document.querySelector('link[rel="icon"][type="image/x-icon"]');
    expect(favicon?.getAttribute('href')).toBe('/favicon.ico');

    const appleIcon = document.querySelector('link[rel="apple-touch-icon"]');
    expect(appleIcon?.getAttribute('href')).toBe('/apple-touch-icon.png');

    const manifest = document.querySelector('link[rel="manifest"]');
    expect(manifest?.getAttribute('href')).toBe('/manifest.json');
  });

  it('renders preconnect links for external resources', () => {
    renderWithHelmet(<SEO />);

    const googleFontsPreconnect = document.querySelector('link[rel="preconnect"][href="https://fonts.googleapis.com"]');
    expect(googleFontsPreconnect).toBeTruthy();

    const googleFontsStaticPreconnect = document.querySelector('link[rel="preconnect"][href="https://fonts.gstatic.com"]');
    expect(googleFontsStaticPreconnect).toBeTruthy();
  });
});